- collection = nil
- if profile_field.parent.present? and profile_field.key.to_s == 'country_code'
  - input_type = :select
  - collection = ProfileFieldTypes::Address.country_codes_hash

- if profile_field.children_count == 0
  = best_in_place_if can?(:update, profile_field), profile_field, :value, {as: input_type, class: 'value', collection: collection}

- if profile_field.children_count > 0
  - if profile_field.type == 'ProfileFieldTypes::Address'
    #address_profile_field
      .do_not_show_in_edit_mode.address_profile_field.editable.value{class: (can?(:update, profile_field) ? 'can_edit' : ''), data: {profile_field_id: profile_field.id, profile_field_url: profile_field.url, profile_field_json_path: profile_field_path(profile_field, format: :json)}}
        %p.name_and_surrounding= simple_format profile_field.profileable.name_with_surrounding
        .display_html= profile_field.display_html
      - if can?(:update, profile_field)
        .show_only_in_edit_mode
          %ul
            - profile_field.children.each do |child_field|
              = render partial: 'profile_fields/profile_field', object: child_field

      = render partial: 'profile_fields/postal_address_flag_switch', locals: { profile_field: profile_field }

      - if can?(:update, profile_field)
        - if profile_field.needs_review?
          .address_needs_review
            .label.label-warning=t :address_needs_review
            = link_to(profile_field_path(profile_field, 'profile_field[needs_review]' => false), method: :put, remote: true, :class => 'btn btn-small btn-success confirm-review-button', title: I18n.t(:confirm_review)) do
              = icon 'ok'


  - else # profile fields that are no addresses:
    %ul
      - profile_field.children.each do |child_field|
        = render partial: 'profile_fields/profile_field', object: child_field

- # render partial: 'shared/flags', locals: { flagable: profile_field }
